{"version":3,"sources":["../node_modules/phone-formatter/index.js","components/Sections/Notifications/Notification/Notification.js","components/Sections/Notifications/Notification/index.js","components/Sections/Notifications/Notification/styles.js","components/Sections/Notifications/NotificationsList/NotificationsList.js","components/Sections/Notifications/NotificationsList/index.js"],"names":["module","exports","normalize","phoneNumber","replace","format","formatString","options","this","i","l","length","withStyles","Notification","listItem","width","marginBottom","marginTop","display","justifyContent","alignItems","borderBottom","title","fontSize","sendDate","textAlign","props","classes","_props$notification","notification","first_name","last_name","send_date","message_name","email","phone_number","formattedSendDate","moment","add","react_default","a","createElement","index_es","className","primary","concat","secondary","phoneFormatter","filterSent","NotificationsList","notificationDisplay","arr","offset","x","y","limit","notifications","slice","notificationCount","MessageContainer","ListStyles","map","index","Notifications_Notification","key","match","Fragment","styled","ul","_templateObject","div","_templateObject2"],"mappings":"4EAAAA,EAAAC,QAAA,CACAC,UAAA,SAAAC,GACA,OAAAA,EAAAC,QAAA,qEAAgG,WAEhGC,OAAA,SAAAF,EAAAG,EAAAC,GAEAA,KAAAL,YACAC,EAAAK,KAAAN,UAAAC,IAKA,QAAAM,EAAA,EAAAC,EAAAP,EAAAQ,OAA2CF,EAAAC,EAAOD,IAClDH,IAAAF,QAAA,IAAAD,EAAAM,IAGA,OAAAH,mICoCeM,ICnDAC,EDmDAD,qBEpDO,CAClBE,SAAU,CACNC,MAAO,OACPC,aAAc,GACdC,UAAW,EACXC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,aAAc,qBAElBC,MAAO,CACHC,SAAU,IAEdC,SAAU,CACND,SAAU,GACVE,UAAW,UFqCJb,CAtCf,SAAsBc,GAAO,IACnBC,EAAYD,EAAZC,QADmBC,EAUvBF,EAAMG,aAPRC,EAHyBF,EAGzBE,WACAC,EAJyBH,EAIzBG,UACAC,EALyBJ,EAKzBI,UACAC,EANyBL,EAMzBK,aACAC,EAPyBN,EAOzBM,MACAC,EARyBP,EAQzBO,aACAb,EATyBM,EASzBN,MAIIc,EAAoBC,IAAOL,GAC9BM,IAAI,EAAG,SACPjC,OAAO,WAEV,OACEkC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,UAAWhB,EAAQb,UAC3ByB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,QAAO,GAAAC,OAAKZ,EAAL,OAAAY,OAAuBvB,GAC9BwB,UAAS,GAAAD,OAAKf,EAAL,KAAAe,OAAmBd,EAAnB,OAAAc,OACPX,GAAgBa,IAAe1C,OAAO8B,EAAc,qBAGxDI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,UAAWhB,EAAQK,WACP,YAArBN,EAAMsB,WAA2B,YAAc,UAChDT,EAAAC,EAAAC,cAAA,WACCL,8WGjCT,IAoCea,EApCW,SAAAvB,GAExB,IAMIwB,EANAC,EAAM,GACNC,EAAS1B,EAAM0B,OACfC,EAAID,EACJE,EAAIF,EAAS1B,EAAM6B,MA4BvB,OA3BAJ,EAAMzB,EAAM8B,cAAcC,MAAMJ,EAAGC,GAKjCJ,EAD8B,IAA5BxB,EAAMgC,kBAENnB,EAAAC,EAAAC,cAACkB,EAAD,KACEpB,EAAAC,EAAAC,cAAA,mDAKFF,EAAAC,EAAAC,cAACmB,EAAD,KACGT,EAAIU,IAAI,SAAChC,EAAciC,GACtB,OACEvB,EAAAC,EAAAC,cAACsB,EAAD,CACEC,IAAKF,EACLjC,aAAcA,EACdmB,WAAYtB,EAAMsB,WAClBiB,MAAOvC,EAAMuC,WAQlB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0B,SAAA,KAAGhB,IAKNU,EAAaO,IAAOC,GAAVC,KAQVV,EAAmBQ,IAAOG,IAAVC,KCtDPtB","file":"static/js/3.57c1de0e.chunk.js","sourcesContent":["module.exports = {\n  normalize: function extract(phoneNumber) {\n    return phoneNumber.replace(/^[\\+\\d{1,3}\\-\\s]*\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/, \"$1$2$3\");\n  },\n  format: function format(phoneNumber, formatString, options) {\n    // Normalize the phone number first unless not asked to do so in the options\n    if (!options || !options.normalize) {\n      phoneNumber = this.normalize(phoneNumber);\n    }\n\n    ;\n\n    for (var i = 0, l = phoneNumber.length; i < l; i++) {\n      formatString = formatString.replace(\"N\", phoneNumber[i]);\n    }\n\n    return formatString;\n  }\n};","import React from \"react\";\nimport moment from \"moment\";\nimport phoneFormatter from \"phone-formatter\";\n\n//PropTypes\nimport PropTypes from \"prop-types\";\n\n//Customized Styling\nimport { styles } from \"./styles.js\";\n\n//Styling\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { ListItem, ListItemText, Typography } from \"@material-ui/core/\";\n\nfunction Notification(props) {\n  const { classes } = props;\n  const {\n    first_name,\n    last_name,\n    send_date,\n    message_name,\n    email,\n    phone_number,\n    title\n  } = props.notification;\n\n  // add hours to sendDate, formatting with moment ensures it displays properly on the FE\n  const formattedSendDate = moment(send_date)\n    .add(1, \"hours\")\n    .format(\"MMMM Do\");\n\n  return (\n    <ListItem className={classes.listItem}>\n      <ListItemText\n        primary={`${message_name} | ${title}`}\n        secondary={`${first_name} ${last_name} | ${\n          email ? email : phoneFormatter.format(phone_number, \"(NNN) NNN-NNNN\")\n        }`}\n      />\n      <Typography className={classes.send_date}>\n        {props.filterSent === \"pending\" ? \"Send Date\" : \"Sent on\"}\n        <br />\n        {formattedSendDate}\n      </Typography>\n    </ListItem>\n  );\n}\n\nNotification.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Notification);\n","import Notification from \"./Notification.js\";\nexport default Notification;\n","export const styles = {\n    listItem: {\n        width: \"100%\",\n        marginBottom: 10,\n        marginTop: 4,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        borderBottom: \"1px solid #E8E9EB\"\n    },\n    title: {\n        fontSize: 16\n    },\n    sendDate: {\n        fontSize: 13,\n        textAlign: \"right\"\n    }\n};","// main page for displaying list of all training series\nimport React from \"react\";\n\n//Styling\nimport styled from \"styled-components\";\n\n//Components\nimport Notification from \"../Notification\";\n\nconst NotificationsList = props => {\n  //Pagination code\n  let arr = [];\n  let offset = props.offset;\n  let x = offset;\n  let y = offset + props.limit;\n  arr = props.notifications.slice(x, y);\n\n  let notificationDisplay;\n\n  if (props.notificationCount === 0) {\n    notificationDisplay = (\n      <MessageContainer>\n        <p>You do not have any pending messages.</p>\n      </MessageContainer>\n    );\n  } else {\n    notificationDisplay = (\n      <ListStyles>\n        {arr.map((notification, index) => {\n          return (\n            <Notification\n              key={index}\n              notification={notification}\n              filterSent={props.filterSent}\n              match={props.match}\n            />\n          );\n        })}\n      </ListStyles>\n    );\n  }\n  //console.log(\"NOTIFICATION COUNT\", props.notificationCount)\n  return <>{notificationDisplay}</>;\n};\n\nexport default NotificationsList;\n//Styled Components\nconst ListStyles = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  padding-left: 0px;\n  margin: 0px;\n`;\n\nconst MessageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: lightgray;\n`;\n","import NotificationsList from \"./NotificationsList.js\";\nexport default NotificationsList;\n"],"sourceRoot":""}